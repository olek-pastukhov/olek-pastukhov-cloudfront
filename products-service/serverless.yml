service: products-service

frameworkVersion: "3"


provider:
  name: aws
  stage: dev
  runtime: nodejs16.x
  region: eu-west-1
  profile: epamlearn
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:Update*
            - dynamodb:Delete*
            - dynamodb:CreateTable
            - dynamodb:DescribeTable
          Resource:
            - "arn:aws:dynamodb:eu-west-1:*:table/olek-products"
            - "arn:aws:dynamodb:eu-west-1:*:table/olek-stock"
  environment:
    PRODUCTS_DYNAMO_DB: 'olek-products'
    STOCK_DYNAMO_DB: 'olek-stock'

functions:
  getProductsList:
    handler: getProductsList.getProductsList
    events:
      - http:
          path: products
          method: get
          cors: true

  createProduct:
    handler: createProduct.createProduct
    events:
      - http:
          path: products
          method: post
          cors: true

  provisionProductsList:
    handler: provisionProductsList.provisionProductsList
    events:
      - http:
          path: products/provision
          method: get
          cors: true

  getProductsById:
    handler: getProductsById.getProductsById
    events:
      - http:
          path: products/{productId}
          method: get
          cors: true
          request:
            parameters:
              paths:
                productId: true

  updateProductById:
    handler: updateProductById.updateProductById
    events:
      - http:
          path: products/{productId}
          method: put
          cors: true
          request:
            parameters:
              paths:
                productId: true

  deleteProductById:
    handler: deleteProductById.deleteProductById
    events:
      - http:
          path: products/{productId}
          method: delete
          cors: true
          request:
            parameters:
              paths:
                productId: true
