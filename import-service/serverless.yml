# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: import-service
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: "3"

provider:
  name: aws
  stage: dev
  runtime: nodejs16.x
  region: eu-west-1
  profile: epamlearn
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - s3:*
            - dynamodb:*
          Resource:
            - "arn:aws:dynamodb:eu-west-1:*:table/olek-products"
            - "arn:aws:dynamodb:eu-west-1:*:table/olek-stock"
            - "arn:aws:s3:::olek-import-service-s3/*"

  environment:
    PRODUCTS_DYNAMO_DB: 'olek-products'
    STOCK_DYNAMO_DB: 'olek-stock'
    UPLOADS_S3_BUCKET: 'olek-import-service-s3'

resources:
  Resources:
    UploadsBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: olek-import-service-s3
        CorsConfiguration:
          CorsRules:
            - AllowedOrigins:
                - '*'
              AllowedHeaders:
                - '*'
              AllowedMethods:
                - PUT
                - POST

functions:
  importFileParser:
    handler: importFileParser.importFileParser
    events:
      - s3:
          bucket: ${self:provider.environment.UPLOADS_S3_BUCKET}
          event: s3:ObjectCreated:*
          existing: true
          rules:
              - prefix: uploaded/
              - suffix: .csv

  importProductsFile:
    handler: importProductsFile.importProductsFile
    events:
      - http:
          path: import
          method: get
          cors: true
          request:
            parameters:
              querystrings:
                fileName: true
